# Generated by Django 5.2.5 on 2025-08-30 17:07

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CoastalLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('latitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('station_id', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DataIngestionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=50)),
                ('endpoint', models.URLField()),
                ('status', models.CharField(max_length=20)),
                ('records_processed', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('execution_time', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], max_length=10)),
                ('prediction_data', models.JSONField()),
                ('model_version', models.CharField(max_length=50)),
                ('confidence', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_assessments', to='monitoring.coastallocation')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('storm_surge', 'Storm Surge'), ('high_waves', 'High Waves'), ('coastal_flooding', 'Coastal Flooding'), ('erosion', 'Coastal Erosion'), ('water_quality', 'Water Quality Issue'), ('general', 'General Alert')], max_length=20)),
                ('severity', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('urgent', 'Urgent'), ('critical', 'Critical')], max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='active', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='monitoring.coastallocation')),
                ('risk_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='monitoring.riskassessment')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SensorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_type', models.CharField(choices=[('water_level', 'Water Level'), ('wave_height', 'Wave Height'), ('wind_speed', 'Wind Speed'), ('wind_direction', 'Wind Direction'), ('air_pressure', 'Air Pressure'), ('water_temperature', 'Water Temperature'), ('salinity', 'Salinity')], max_length=20)),
                ('value', models.FloatField()),
                ('unit', models.CharField(max_length=20)),
                ('timestamp', models.DateTimeField()),
                ('data_source', models.CharField(max_length=50)),
                ('quality_flag', models.CharField(default='good', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_data', to='monitoring.coastallocation')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='riskassessment',
            index=models.Index(fields=['location', '-created_at'], name='monitoring__locatio_248fac_idx'),
        ),
        migrations.AddIndex(
            model_name='riskassessment',
            index=models.Index(fields=['risk_level', '-created_at'], name='monitoring__risk_le_6d5fd1_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['location', 'status', '-created_at'], name='monitoring__locatio_844e67_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['severity', 'status'], name='monitoring__severit_1e6a2c_idx'),
        ),
        migrations.AddIndex(
            model_name='sensordata',
            index=models.Index(fields=['location', 'measurement_type', '-timestamp'], name='monitoring__locatio_b70631_idx'),
        ),
        migrations.AddIndex(
            model_name='sensordata',
            index=models.Index(fields=['timestamp'], name='monitoring__timesta_1d0599_idx'),
        ),
    ]
